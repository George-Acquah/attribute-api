version: '3.8'
name: firebase-auth

services:
  db:
    image: postgres:latest
    container_name: firebase_auth_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: firebase_auth
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 30

  api:
    user: "1000:1000"  # Match host user IDs
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: firebase_auth_api
    restart: unless-stopped
    ports:
      - '3300:3300'
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: 'true'
      WATCHPACK_POLLING: 'true'
      DATABASE_URL: postgres://postgres:password@db:5432/firebase_auth
      FIREBASE_AUTH_EMULATOR_HOST: host.docker.internal:9099
      FIREBASE_PROJECT_ID: demo-project
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  pgadmin:
    image: dpage/pgadmin4
    container_name: firebase_auth_pgadmin
    restart: unless-stopped
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:7
    container_name: firebase_auth_redis
    restart: always
    ports:
      - '6379:6379'
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 3
volumes:
  postgres_data:
  pgadmin_data:
