name: firebase-auth

services:
  db:
    image: postgres:latest
    container_name: firebase_auth_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - attribute-postgres:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 30

  api:
    # user: "1000:1000"  # Match host user IDs
    build:
      dockerfile: Dockerfile
      context: .
      target: development
    container_name: firebase_auth_api
    restart: unless-stopped
    ports:
      - '3300:3300'
    command: ["./wait-for.sh", "db:5432", "--", "pnpm", "start:dev"]
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      FIREBASE_AUTH_EMULATOR_HOST: host.docker.internal:9099
    #   FIREBASE_PROJECT_ID: demo-project
    #   REDIS_HOST: redis
    #   REDIS_PORT: 6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  pgadmin:
    image: dpage/pgadmin4
    container_name: firebase_auth_pgadmin
    restart: unless-stopped
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:7
    container_name: firebase_auth_redis
    restart: always
    ports:
      - '6379:6379'
    volumes:
      - redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 3
volumes:
  attribute-postgres:
  pgadmin_data:
  redis:
